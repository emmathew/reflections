How did viewing a diff between two versions of a file help you see the bug that was introduced?

Viewing diff between 2 versions of the file helped in saving time of going through all the lines in the file to find the typo. diff tool printed out the diff between two files and I just had to go through those lines to find the typo


How could having easy access to the entire history of a file make you a more efficient programmer in the long term
It is easy to go to any revison of the file so that I can get the previous different behaviors of the file without any troubles.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Cons:  It could be possible that the programmer will forget to manually save for long time and thus eventually the change will become too big
Pros: Manually choosing will help to corelate a commit to a logical change and thus making it easy to understand the changes later.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
It is easier to track the history across different files if the codes is spread across different files. 

How can you use the commands git log and git diff to view the history of files?
git log will list the list of commits with their respective commit id, date of commit and some other details
git diff enable you to see the difference between two commits, thus making easy to view the changes that went into the later commit.

How might using version control make you more confident to make changes that could break something?
Git checkout makes it possible to revert to any previous commits easily even if your current commit have issues.

Now that you have your workspace set up, what do you want to try using Git for?
I am hoping to use git for doing the version control of different presonal projects that I am thinking of doing

